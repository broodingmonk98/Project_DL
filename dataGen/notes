Linear time testable:
No isolated points (FO definable)                                 #Done
No three cycles (FO definable)                                    #Done

Bipartition (MSO definable, not FO definable)                     #Done
Connectedness (MSO definable, not FO definable)                   #Done
Acylcicity  (MSO definable, not FO definable)                     #Done
Existence of Eulerian Path (MSO definable, not FO definable)      #Done
Planarity (MSO definable, not FO definable)                       #Done using planarity:- pip3 install planarrity && pip3 install cython

poly time testable:
Graph Matching                                                    #TODO: Use networkx.algorithms.isomorphic

NP complete
Hamiltonian Cycle                                                 #Done
Tree Width > 4                                                    #TODO
IDP set size > 4                                                  #TODO



import networkx as nx

G = nx.Graph()
nx.draw(G);
G = nx.complete_graph()
np.random.choice(n, m) sample m from n
nx.is_connected(G)


